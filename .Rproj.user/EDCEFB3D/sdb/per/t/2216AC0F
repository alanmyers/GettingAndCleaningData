{
    "contents" : "#run_analysis helper functions:\n#\n#  GetTheData -- Load files into R.\n#   Add feature_labels (column names)\n#   Add activity_labels (walking, walking_upstairs...)\n#   Add subject ids (test subject (1..30))\n#   Create DF with mean and std columns\n#   return combined (test & training) Data frame \n#  ReduceTheData -- Eliminate un-needed columns.  Remaining Columns will be:\n#    SubjectId - 1..30\n#    Activity  - WALKING, WALKING UPSTAIRS, ETC\n#    mean(observations)\n#    std(observations)\n#\nGetTheData <- function(nbRows) {\n  # nbRows --> loading data... Avoid long processing times\n  # -1 = all rows.  Otherwise a value of nb rows to read from\n  # train and test data sets\n  #\n  # Files\n  #  features.txt - List of 561 labels that should be the col-names for X_Test\n  #  activity_labels.txt - Activity (e.g. 1 = walking, 2 = walking_upstairs...)\n  #  Data\n  #   X_test - The test / training data\n  #   y_test - Maps to activity labels (1-6)\n  #   subject_test - each row identifies the test subject (1-30)\n  \n  trainDataFile     <- \"..\\\\UCI HAR Dataset\\\\train\\\\X_train.txt\"\n  trainLabelFile    <- \"..\\\\UCI HAR Dataset\\\\train\\\\y_train.txt\"\n  trainSubjectFile  <- \"..\\\\UCI HAR Dataset\\\\train\\\\subject_train.txt\"\n  \n  testDataFile      <- \"..\\\\UCI HAR Dataset\\\\test\\\\X_test.txt\"\n  testLabelFile     <- \"..\\\\UCI HAR Dataset\\\\test\\\\y_test.txt\"\n  testSubjectFile   <- \"..\\\\UCI HAR Dataset\\\\test\\\\subject_test.txt\"\n  \n  colLabelFile      <- \"..\\\\UCI HAR Dataset\\\\features.txt\"\n  activityLabelFile <- \"..\\\\UCI HAR Dataset\\\\activity_labels.txt\"\n  \n  \n  trainData      <- read.csv(trainDataFile, sep=\"\", header=FALSE, \n                             strip.white=T, nrows = nbRows)\n  trainLabel     <- read.table(trainLabelFile, nrows= nbRows)\n  trainSubject   <- read.table(trainSubjectFile, nrows=nbRows)\n  \n  testData       <- read.csv(testDataFile,  sep=\"\", header=FALSE, \n                             strip.white=T, nrows = nbRows)\n  testLabel      <- read.table(testLabelFile, nrows= nbRows)\n  testSubject   <- read.table(testSubjectFile, nrows=nbRows)\n  \n  ActivityLabels <- read.table(activityLabelFile, nrows= nbRows)\n  names(ActivityLabels) <- c(\"Id\", \"Name\")\n  # Get rid of the parans and commas in the column names.  \n  #    E.g. angle(tBodyGyroMean,gravityMean)\n  #    becomes angletBodyGyroMean.gravityMean\n  #\n  colLabels      <- read.table(colLabelFile)\n  colLabels      <- gsub(\"\\\\(\", \"\", colLabels$V2)\n  colLabels      <- gsub(\"\\\\)\", \"\", colLabels)\n  colLabels      <- gsub(\"\\\\,\", \"\\\\.\", colLabels)\n  \n  # Add in the column Names\n  colnames(testData)  <- colLabels\n  colnames(trainData) <- colLabels\n  \n  # Add in the activity labels\n  testData$activityLabelId  <- as.vector(testLabel$V1)\n  trainData$activityLabelId <- as.vector(trainLabel$V1)\n  ##  Need to add the names into the testData & trainData frames. \n  ##  1 -> WALKING\n  testData$activityLabelNames  <- as.character(apply(as.data.frame(testData[,'activityLabelId']), \n                                                     1, function(x) ActivityLabels$Name[x]))\n  trainData$activityLabelNames <- as.character(apply(as.data.frame(trainData[,'activityLabelId']), \n                                                     1, function(x) ActivityLabels$Name[x]))\n  \n  # Add in the subjects column\n  testData$subjectId  <- as.vector(testSubject$V1)\n  trainData$subjectId <- as.vector(trainSubject$V1)\n  \n  # Merge Data Sets\n  fullData <- rbind(testData, trainData)\n  return(fullData)\n}\n\nReduceTheData <- function(fullData) {\n  newNames <- vector()\n  \n  # Get only mean and std columns\n  DataSet <- data.frame(subjectId=fullData$subjectId, \n                        activityName=fullData$activityLabelNames)  \n  newNames <- as.vector(c(\"subjectId\", \"activityName\"))\n  #\n  # Cnt starts at 2... since we have added columns.\n  #\n  cnt <- 2  \n  \n  for (name in names(fullData)) {    \n    if (length(grep(\"Mean|mean|std\", name)) != 0)\n    {      \n      cnt <- cnt + 1\n      DataSet <- cbind(DataSet, as.vector(fullData[,name]))      \n      newNames[cnt] = name\n    }\n    else {\n      \n    }\n    \n  }\n  names(DataSet) <- as.vector(newNames)\n  return(DataSet)\n}\n\nrun_analysis <- function(nbRows = -1)\n{\n  fullData <- GetTheData(nbRows)\n  \n  DataSet <- ReduceTheData(fullData)\n  \n  return(DataSet)\n}\n",
    "created" : 1426695273097.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3576471657",
    "id" : "2216AC0F",
    "lastKnownWriteTime" : 1426882275,
    "path" : "~/Coursera/Getting and CLeaning/Week 3 Project/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}